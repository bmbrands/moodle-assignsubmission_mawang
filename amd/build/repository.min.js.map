{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module repository\n *\n * @module     assignsubmission_mawang/repository\n * @copyright  2025 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * The Repository class provides methods to interact with the Mawang repository.\n * It allows for fetching and updating repository data.\n */\nexport default class Repository {\n    /**\n     * Fetches the repository data.\n     *\n     * @param {Object} data The data to fetch.\n     * @returns {Promise<Object>} A promise that resolves with the repository data.\n     */\n    static getFields(data) {\n        return Ajax.call([{\n            methodname: 'assignsubmission_mawang_get_fields',\n            args: data\n        }])[0].then((response) => {\n            if (response.error) {\n                Notification.exception(response.error);\n            }\n            return response;\n        });\n    }\n\n    /**\n     * Updates the repository data.\n     *\n     * @param {Object} data The data to update.\n     * @returns {Promise<Object>} A promise that resolves with the updated data.\n     */\n    static updateFields(data) {\n        return Ajax.call([{\n            methodname: 'assignsubmission_mawang_update_fields',\n            args: data\n        }])[0].then((response) => {\n            if (response.error) {\n                Notification.exception(response.error);\n            }\n            return response;\n        });\n    }\n\n    /**\n     * Store the draft data.\n     * @param {Object} data The data to store.\n     * @returns {Promise<Object>} A promise that resolves with the stored data.\n     */\n    static storeDraft(data) {\n        return Ajax.call([{\n            methodname: 'assignsubmission_mawang_store_draft',\n            args: data\n        }])[0].then((response) => {\n            if (response.error) {\n                Notification.exception(response.error);\n            }\n            return response;\n        });\n    }\n}\n"],"names":["data","Ajax","call","methodname","args","then","response","error","exception"],"mappings":";;;;;;;4NAqCqBA,aACNC,cAAKC,KAAK,CAAC,CACdC,WAAY,qCACZC,KAAMJ,QACN,GAAGK,MAAMC,WACLA,SAASC,6BACIC,UAAUF,SAASC,OAE7BD,gCAUKN,aACTC,cAAKC,KAAK,CAAC,CACdC,WAAY,wCACZC,KAAMJ,QACN,GAAGK,MAAMC,WACLA,SAASC,6BACIC,UAAUF,SAASC,OAE7BD,8BASGN,aACPC,cAAKC,KAAK,CAAC,CACdC,WAAY,sCACZC,KAAMJ,QACN,GAAGK,MAAMC,WACLA,SAASC,6BACIC,UAAUF,SAASC,OAE7BD"}