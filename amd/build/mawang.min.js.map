{"version":3,"file":"mawang.min.js","sources":["../src/mawang.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module mawang\n *\n * @module     assignsubmission_mawang/mawang\n * @copyright  2025 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nclass Mawang {\n    constructor() {\n        this.rootElement = document.querySelector('.mawang-form');\n        this.init();\n    }\n\n    init() {\n        const textareas = this.rootElement.querySelectorAll('textarea');\n        // Create a new <div> with a word counter after each textarea, give it the id of the textarea + '-wordcounter'\n        textareas.forEach((textarea) => {\n            const wordCounter = document.createElement('div');\n            wordCounter.id = textarea.id + '-wordcounter';\n            wordCounter.classList.add('mawang-wordcounter', 'small', 'px-2', 'py-1', 'mt-1', 'border', 'ml-auto');\n            const count = textarea.value.split(/\\s+/).filter((word) => word.length > 0).length;\n            wordCounter.innerHTML = 'Word count:' + count;\n            textarea.parentNode.insertBefore(wordCounter, textarea.nextSibling);\n        });\n        this.bindEvents();\n\n    }\n\n    bindEvents() {\n        // Bind events here\n        const textareas = this.rootElement.querySelectorAll('textarea');\n        textareas.forEach((textarea) => {\n            textarea.addEventListener('input', (event) => {\n                const wordCounter = document.getElementById(event.target.id + '-wordcounter');\n                const count = event.target.value.split(/\\s+/).filter((word) => word.length > 0).length;\n                wordCounter.innerHTML = 'Word count:' + count;\n            });\n        });\n    }\n}\n\n/*\n * Initialise\n * @param {HTMLElement} element The element.\n * @param {String} courseid The courseid.\n */\nconst init = () => {\n    new Mawang();\n};\n\nexport default {\n    init: init,\n};"],"names":["Mawang","constructor","rootElement","document","querySelector","init","this","querySelectorAll","forEach","textarea","wordCounter","createElement","id","classList","add","count","value","split","filter","word","length","innerHTML","parentNode","insertBefore","nextSibling","bindEvents","addEventListener","event","getElementById","target"],"mappings":";;;;;;;;MAsBMA,OACFC,mBACSC,YAAcC,SAASC,cAAc,qBACrCC,OAGTA,OACsBC,KAAKJ,YAAYK,iBAAiB,YAE1CC,SAASC,iBACTC,YAAcP,SAASQ,cAAc,OAC3CD,YAAYE,GAAKH,SAASG,GAAK,eAC/BF,YAAYG,UAAUC,IAAI,qBAAsB,QAAS,OAAQ,OAAQ,OAAQ,SAAU,iBACrFC,MAAQN,SAASO,MAAMC,MAAM,OAAOC,QAAQC,MAASA,KAAKC,OAAS,IAAGA,OAC5EV,YAAYW,UAAY,cAAgBN,MACxCN,SAASa,WAAWC,aAAab,YAAaD,SAASe,qBAEtDC,aAITA,aAEsBnB,KAAKJ,YAAYK,iBAAiB,YAC1CC,SAASC,WACfA,SAASiB,iBAAiB,SAAUC,cAC1BjB,YAAcP,SAASyB,eAAeD,MAAME,OAAOjB,GAAK,gBACxDG,MAAQY,MAAME,OAAOb,MAAMC,MAAM,OAAOC,QAAQC,MAASA,KAAKC,OAAS,IAAGA,OAChFV,YAAYW,UAAY,cAAgBN,0BAezC,CACXV,KALS,SACLL"}